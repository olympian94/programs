**********************************************************************************************************************
**********************************************************************************************************************
	EXAMPLE 1
**********************************************************************************************************************
**********************************************************************************************************************

##----------------------------------------------------------------------------
##	one.c
##----------------------------------------------------------------------------
#include<stdio.h>

int i=25;
int j=50;
extern void foo();
int main(){
	foo();
}

##----------------------------------------------------------------------------
##	two.c
##----------------------------------------------------------------------------
#include<stdio.h>

extern int i,j;
void foo()
{
	int s;
	s=i+j;
	printf("%d",s);
}

##----------------------------------------------------------------------------
##	to run
##----------------------------------------------------------------------------
1.	gcc -c one.c two.c
2.  gcc one.o two.o -o out
3.  ./out

##----------------------------------------------------------------------------
##	output
##----------------------------------------------------------------------------
75

one.c uses foo from two.c
two.c takes i,j from one.c


**********************************************************************************************************************
**********************************************************************************************************************
	EXAMPLE 2
**********************************************************************************************************************
**********************************************************************************************************************

##----------------------------------------------------------------------------
##	one.c
##----------------------------------------------------------------------------
#include<stdio.h>

static int i=25;
static int j=50;
extern void foo();
int main(){
	foo();
}

##----------------------------------------------------------------------------
##	two.c
##----------------------------------------------------------------------------
#include<stdio.h>

int i=5 ,j=10;
void foo()
{
	int s;
	s=i+j;
	printf("%d",s);
}

##----------------------------------------------------------------------------
##	to run
##----------------------------------------------------------------------------
1.	gcc -c one.c two.c
2.  gcc one.o two.o -o out
3.  ./out

##----------------------------------------------------------------------------
##	output
##----------------------------------------------------------------------------
15

one.c uses foo from two.c
two.c will use i,j from two.c only and hence 5+10 = 15
two.c cannot use i,j from one.c because they are static vars in one.c and hence can only be used in one.c
if i,j were not static in one.c it would throw 'multiple declaration of i,j' error
