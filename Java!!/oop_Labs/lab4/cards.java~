import java.util.Arrays;
enum Suit
{
	SPADES, HEARTS, CLUBS, DIAMONDS;
}
enum Value
{//2 (1), 3 (2), 4 (3), 5 (4), 6 (5), 7 (6), 8 (7), 9 (8), 10 (9), 
	ACE (10), JACK (11), KING(12), QUEEN(13);
	private int pos;
	Value(int val_inp)
	{	pos = val_inp;
	}
	public int getPos()
	{	return pos;
	}
}
class Card implements Comparable
{
	protected Suit cardType;
	protected Value val;
	public static final int SIZE = 52;
	public void setSuit(Suit inp)
	{
		cardType = inp;
	}
	public void setVal(Value valinp)
	{
		val = valinp;
	}
	public Suit getSuit()
	{	return cardType;
	}
	public Value getVal()
	{	return val;
	}
	public void printCard()
	{
		System.out.println("Card Suit :\t"+cardType+"\tValue :\t"+value);
	}
	public int compareTo(Object obj)
	{
		Card card2 = (Card) obj;
		if(val.getPos()>card2.val.getPos())
			return 1;
		else if(val.getPos()<card2.val.getPos())
			return -1;
		else if(val.getPos()>card2.val.getPos())
			return 0;
	}
	public static void main(String args[])
	{
		Card[] deck1 = new Card[SIZE];
		Value[] setOfValues = Value.values();
		for(int j=0 ; j<12; j++)
		{
			deck1[j].setSuit(Suit.SPADES);
			for(Value var : Value.values())
				deck1[j].setVal(m);
		}
		for(int j=13 ; j<25; j++)
		{
			deck1[j].setSuit(Suit.CLUBS);
			for(Value var : Value.values())
				deck1[j].setVal(m);
		}
		for(int j=26 ; j<38; j++)
		{
			deck1[j].setSuit(Suit.DIAMONDS);
		    for(Value var : Value.values())
				deck1[j].setVal(m);
		}
		for(int j=39 ; j<51; j++)
		{
			deck1[j].setSuit(Suit.HEARTS);
			for(Value var : Value.values())
				deck1[j].setVal(m);
		}
		for(int j=0 ; j< SIZE; j++)
			deck1[j].print();	
	
	}
}
